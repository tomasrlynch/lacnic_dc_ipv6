# Ansible inventory created from ['/root/lacnic_ipv6dc/vxlan/topology.yml', 'package:topology-defaults.yml']
#

af:
  ipv4: true
  ipv6: true
bgp:
  activate:
    ipv6:
    - ebgp
  advertise_loopback: true
  as: 64522
  community:
    ebgp:
    - standard
    - large
    - extended
    ibgp:
    - standard
    - large
    - extended
    ibgp_localas:
    - standard
    - large
    - extended
  ipv4: true
  ipv6: true
  neighbors:
  - activate:
      ipv6: true
    as: 64510
    ifindex: 1
    ipv6: true
    local_if: eth1
    name: spine1
    type: ebgp
  - activate:
      ipv6: true
    as: 64510
    ifindex: 2
    ipv6: true
    local_if: eth2
    name: spine2
    type: ebgp
  - activate: {}
    as: 64524
    evpn: true
    ifindex: 20000
    ipv4: 100.64.0.4
    ipv6: 2001:db8:64:4::4
    multihop: 255
    name: leaf4
    type: ebgp
  - activate:
      ipv4: false
      ipv6: true
    as: 64524
    evpn: true
    ifindex: 20001
    ipv4: 100.65.0.6
    ipv6: 2001:db8:aa::6
    name: leaf4
    type: ebgp
  next_hop_self: true
  router_id: 100.64.0.2
box: quay.io/frrouting/frr:9.1.0
clab:
  binds:
  - clab_files/leaf2/daemons:/etc/frr/daemons
  - clab_files/leaf2/hosts:/etc/hosts
  config_templates:
  - daemons:/etc/frr/daemons
  - hosts:/etc/hosts
  kind: linux
config:
- ebgp.multihop
evpn:
  session:
  - ebgp
  vlans:
  - verde
hostname: clab-vxlan-leaf2
interfaces:
- _parent_intf: lo0
  _parent_ipv4: 100.64.0.2/32
  ifindex: 1
  ifname: eth1
  ipv4: true
  ipv6: true
  linkindex: 2
  mtu: 1500
  name: leaf2 -> spine1
  neighbors:
  - ifname: eth2
    ipv6: true
    node: spine1
  pool: core
  role: external
  type: p2p
- _parent_intf: lo0
  _parent_ipv4: 100.64.0.2/32
  ifindex: 2
  ifname: eth2
  ipv4: true
  ipv6: true
  linkindex: 6
  mtu: 1500
  name: leaf2 -> spine2
  neighbors:
  - ifname: eth2
    ipv6: true
    node: spine2
  pool: core
  role: external
  type: p2p
- bgp:
    advertise: true
  bridge: vxlan_10
  ifindex: 3
  ifname: eth3
  ipv4: 100.65.3.4/24
  ipv6: 2001:db8:aa:3::4/64
  linkindex: 10
  mtu: 1500
  name: leaf2 -> host2
  neighbors:
  - ifname: eth1
    ipv4: 100.65.3.8/24
    ipv6: 2001:db8:aa:3::8/64
    node: host2
  role: stub
  type: lan
- bridge: vxlan_12
  ifindex: 4
  ifname: eth4
  linkindex: 12
  mtu: 1500
  type: lan
  vlan:
    access: verde
    access_id: 1000
- bridge_group: 1
  ifindex: 20001
  ifname: vlan1000
  ipv4: 100.65.0.4/24
  ipv6: 2001:db8:aa::4/64
  name: VLAN verde (1000) -> [host2,host4,leaf4]
  neighbors:
  - ifname: eth2
    ipv4: 100.65.0.8/24
    ipv6: 2001:db8:aa::8/64
    node: host2
  - ifname: eth1
    ipv4: 100.65.0.10/24
    ipv6: 2001:db8:aa::a/64
    node: host4
  - ifname: vlan1000
    ipv4: 100.65.0.6/24
    ipv6: 2001:db8:aa::6/64
    node: leaf4
  type: svi
  virtual_interface: true
  vlan:
    mode: irb
loopback:
  ifindex: 0
  ifname: lo0
  ipv4: 100.64.0.2/32
  ipv6: 2001:db8:64:2::2/64
  neighbors: []
  type: loopback
mgmt:
  ifname: eth0
  ipv4: 192.168.121.104
  mac: 08:4f:a9:00:00:04
module:
- vlan
- bgp
- vxlan
- evpn
mtu: 1500
vlan:
  max_bridge_group: 1
vlans:
  verde:
    bridge_group: 1
    evpn:
      evi: 1000
      export:
      - 64496:1000
      import:
      - 64496:1000
      rd: 100.64.0.2:1000
    id: 1000
    mode: irb
    prefix:
      allocation: id_based
      ipv4: 100.65.0.0/24
      ipv6: 2001:db8:aa::/64
    vni: 101000
vxlan:
  domain: global
  flooding: evpn
  vlans:
  - verde
  vtep: 100.64.0.2
  vtep_interface: lo0
