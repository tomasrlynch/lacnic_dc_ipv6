#!/bin/vbash
source /opt/vyatta/etc/functions/script-template

if [ "$(id -g -n)" != 'vyattacfg' ] ; then
    exec sg vyattacfg -c "/bin/vbash $(readlink -f $0) $@"
fi
#
configure
#
# Configuración de IS-IS entre borde1 y borde2
#
set protocols isis dynamic-hostname
set protocols isis interface dum0
set protocols isis interface eth3 network point-to-point
set protocols isis level 'level-2'
delete protocols bgp neighbor eth1 address-family ipv6-unicast nexthop-self
delete protocols bgp neighbor eth2 address-family ipv6-unicast nexthop-self
{% for ngb in bgp.neighbors %}
delete protocols bgp neighbor {{ ngb.ipv6 }} address-family ipv6-unicast nexthop-self
{% endfor %}
{% for ngb in bgp.neighbors if 'borde2' in ngb.name %}
set protocols bgp neighbor {{ ngb.ipv6 }} address-family ipv6-unicast nexthop-self
set protocols isis net '49.0001.0000.0000.0101.00'
{% endfor %}
{% for ngb in bgp.neighbors if 'borde1' in ngb.name %}
set protocols bgp neighbor {{ ngb.ipv6 }} address-family ipv6-unicast nexthop-self
set protocols isis net '49.0001.0000.0000.0102.00'
{% endfor %}
#
# Las siguientes líneas configuran ambos bordes para:
# - Generar el prefijo agregado 2001:db8:aa::/48
# - Generar una ruta default para propagarla hacia los spines
# - Políticas de exportación e importación hacia los Spines
#   * Importación: acepta todo
#   * Exportación: envía ruta default y loopback del router
#set protocols bgp address-family ipv6-unicast aggregate-address 2001:db8:aa::/48
#set protocols static route6 ::/0 blackhole distance '254'
#set policy prefix-list6 LOOPBACK rule 100 action 'permit'
#set policy prefix-list6 LOOPBACK rule 100 ge '128'
#set policy prefix-list6 LOOPBACK rule 100 prefix '2001:db8:64::/64'
#set policy prefix-list6 RUTA_DEFAULT rule 100 action 'permit'
#set policy prefix-list6 RUTA_DEFAULT rule 100 prefix '::/0'
#set policy route-map SPINE_EXPORTAR rule 100 action 'permit'
#set policy route-map SPINE_EXPORTAR rule 100 match ipv6 address prefix-list 'RUTA_DEFAULT'
#set policy route-map SPINE_EXPORTAR rule 200 action 'permit'
#set policy route-map SPINE_EXPORTAR rule 200 match ipv6 address prefix-list 'LOOPBACK'
#set policy route-map SPINE_EXPORTAR rule 1000 action 'deny'
#set policy route-map SPINE_IMPORTAR rule 1000 action 'permit'
#set protocols bgp address-family ipv6-unicast redistribute static
#set protocols bgp neighbor eth1 address-family ipv6-unicast route-map export 'SPINE_EXPORTAR'
#set protocols bgp neighbor eth2 address-family ipv6-unicast route-map export 'SPINE_EXPORTAR'
#set protocols bgp neighbor eth1 address-family ipv6-unicast route-map import 'SPINE_IMPORTAR'
#set protocols bgp neighbor eth2 address-family ipv6-unicast route-map import 'SPINE_IMPORTAR'
#
# Políticas de importación y exportación hacia los tránsitos:
# - Importación: acepta todos los prefijos y los marca con una comunidad de tránsito
# - Exportación: rechaza la ruta default, rechaza prefijos mayores a /48, rechaza prefijos
#                con la comunidad de tránsito, envía el resto
#
#set policy prefix-list6 PREFIJOS_MAYOR_48 rule 100 action 'permit'
#set policy prefix-list6 PREFIJOS_MAYOR_48 rule 100 ge '49'
#set policy prefix-list6 PREFIJOS_MAYOR_48 rule 100 prefix '::/0'
#set policy large-community-list TRANSITO rule 100 action 'permit'
#set policy large-community-list TRANSITO rule 100 regex '64500:100:0'
#set policy route-map TRANSITO_EXPORTAR rule 100 action 'deny'
#set policy route-map TRANSITO_EXPORTAR rule 100 match ipv6 address prefix-list 'RUTA_DEFAULT'
#set policy route-map TRANSITO_EXPORTAR rule 200 action 'deny'
#set policy route-map TRANSITO_EXPORTAR rule 200 match ipv6 address prefix-list 'PREFIJOS_MAYOR_48'
#set policy route-map TRANSITO_EXPORTAR rule 300 action 'deny'
#set policy route-map TRANSITO_EXPORTAR rule 300 match large-community large-community-list 'TRANSITO'
#set policy route-map TRANSITO_EXPORTAR rule 1000 action 'permit'
#set policy route-map TRANSITO_IMPORTAR rule 1000 action 'permit'
#set policy route-map TRANSITO_IMPORTAR rule 1000 set large-community add '64500:100:0'
#{% for ngb in bgp.neighbors if 'transito' in ngb.name %}
#set protocols bgp neighbor {{ ngb.ipv6 }} address-family ipv6-unicast route-map export 'TRANSITO_EXPORTAR'
#set protocols bgp neighbor {{ ngb.ipv6 }} address-family ipv6-unicast route-map import 'TRANSITO_IMPORTAR'
#{% endfor %}
commit
save
exit
